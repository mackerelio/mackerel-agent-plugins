---
name: test

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
env:
  DEBIAN_FRONTEND: noninteractive
jobs:
  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: 1.19.x
      - uses: actions/checkout@v3
      - uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout 5m
  test:
    strategy:
      matrix:
        go: ["1.19.x", "1.18.x"]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-server
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: go test -covermode=atomic -coverprofile=.profile.cov ./...
        shell: bash
      - if: matrix.os == 'ubuntu-latest'
        run: |
          ./test.bash
          make testconvention
      - if: matrix.os == 'windows-latest'
        run: |
          go build -o mackerel-plugin-mssql/mackerel-plugin-mssql.exe ./mackerel-plugin-mssql
          go build -o mackerel-plugin-windows-server-sessions/mackerel-plugin-windows-server-sessions.exe ./mackerel-plugin-windows-server-sessions
      - uses: shogo82148/actions-goveralls@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-profile: .profile.cov
          parallel: true
          flag-name: Go-${{ matrix.os }}-${{ matrix.go }}
  finish:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
  build:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - run: |
          sudo apt-get update
          sudo apt-get install -y rpm devscripts debhelper fakeroot crossbuild-essential-arm64
          mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v4
        with:
          go-version: 1.19.x
      - uses: actions/checkout@v3
      - run: make clean rpm deb
      - uses: actions/upload-artifact@v3
        with:
          name: linux-build-artifacts
          path: |
            ~/rpmbuild/RPMS/*/*.rpm
            packaging/*.deb
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: linux-build-artifacts
          path: artifacts/
      - uses: mackerelio/staging-release-update-action@main
        if: github.ref == 'refs/heads/master'
        with:
          directory: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag: staging
      - uses: mackerelio/create-release-action@main
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          directory: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: "refs/tags/v"
          bump-up-branch-prefix: "bump-version-"
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,action,eventName,ref,workflow,job,took
          username: mackerel-agent-plugins-release
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.MACKEREL_SLACK_WEBHOOK_URL }}
